import random


def get_moves():
    if command.endswith("user user"):
        return user_move, user_move
    if command.endswith("user easy"):
        return user_move, easy_move
    if command.endswith("user medium"):
        return user_move, medium_move
    if command.endswith("user hard"):
        return user_move, hard_move
    if command.endswith("easy user"):
        return easy_move, user_move
    if command.endswith("medium user"):
        return medium_move, user_move
    if command.endswith("hard user"):
        return hard_move, user_move
    if command.endswith("easy easy"):
        return easy_move, easy_move
    if command.endswith("easy medium"):
        return easy_move, medium_move
    if command.endswith("easy hard"):
        return easy_move, hard_move
    if command.endswith("medium easy"):
        return medium_move, easy_move
    if command.endswith("medium medium"):
        return medium_move, medium_move
    if command.endswith("medium hard"):
        return medium_move, hard_move
    if command.endswith("hard easy"):
        return hard_move, easy_move
    if command.endswith("hard medium"):
        return hard_move, medium_move
    if command.endswith("hard hard"):
        return hard_move, hard_move


def print_field():
    print("---------")
    print("|", field[0][2], field[1][2], field[2][2], "|")
    print("|", field[0][1], field[1][1], field[2][1], "|")
    print("|", field[0][0], field[1][0], field[2][0], "|")
    print("---------")


def user_move():
    global field, empty_cells
    while(True):
        try:
            x, y = input("Enter the coordinates: ").split()
            x = int(x)
            y = int(y)
        except ValueError:
            print("You should enter numbers!")
            continue
        if not 1 <= x <= 3 or not 1 <= y <= 3:
            print("Coordinates should be from 1 to 3!")
            continue
        if field[x - 1][y - 1] != " ":
            print("This cell is occupied! Choose another one!")
            continue
        field[x - 1][y - 1] = mark
        empty_cells -= 1
        break


def easy_move():
    print("Making move level \"easy\"")
    random_move()


def medium_move():
    print("Making move level \"medium\"")
    if not winning_move():
        random_move()

def hard_move():
    print("Making move level \"hard\"")
    if not winning_move():
        if not diagonals_move():
            random_move()


def win():
    if field[0][0] == field[1][1] == field[2][2] != " "\
       or field[0][2] == field[1][1] == field[2][0] != " ":
        return True
    for i in range(0, 3):
        if field[i][0] == field[i][1] == field[i][2] != " "\
           or field[0][i] == field[1][i] == field[2][i] != " ":
            return True
    return False


def random_move():
    global field, empty_cells
    x = random.randint(1, 3)
    y = random.randint(1, 3)
    while(field[x - 1][y - 1] != " "):
        x = random.randint(1, 3)
        y = random.randint(1, 3)
    field[x - 1][y - 1] = mark
    empty_cells -= 1


def winning_move():
    global field, empty_cells
    for x in range(1, 4):
        for y in range(1, 4):
            if field[x - 1][y - 1] == " ":
                field[x - 1][y - 1] = mark
                if win():
                    empty_cells -= 1
                    return True
                else:
                    field[x - 1][y - 1] = " "
                if mark == "O":
                    field[x - 1][y - 1] = "X"
                else:
                    field[x - 1][y - 1] = "O"
                if win():
                    field[x - 1][y - 1] = mark
                    empty_cells -= 1
                    return True
                else:
                    field[x - 1][y - 1] = " "
    return False


def diagonals_move():
    global field, empty_cells
    diagonals_field = [[field[0][0], "", field[0][2]], ["", field[1][1], ""], [field[2][0], "",field[2][2]]]
    if " " in diagonals_field:
        if diagonals_field[1][1] == " ":
            x = 2
            y = 2
        else:
            x = random.randint(1, 3)
            y = random.randint(1, 3)
            while(diagonals_field[x - 1][y - 1] != " "):
                x = random.randint(1, 3)
                y = random.randint(1, 3)
        field[x - 1][y - 1] = mark
        empty_cells -= 1
        return True
    return False

while(True):
    field = [[" ", " ", " "], [" ", " ", " "], [" ", " ", " "]]
    empty_cells = 9
    command = input("Input command: ")
    if command == "exit":
        break
    try:
        X_move, O_move = get_moves()
    except Exception:
        print("Bad parameters!")
        continue
    print_field()
    while(True):
        mark = "X"
        X_move()
        print_field()
        if win():
            print("X wins")
            print()
            break
        if empty_cells == 0:
            print("Draw")
            print()
            break
        mark = "O"
        O_move()
        print_field()
        if win():
            print("O wins")
            print()
            break
